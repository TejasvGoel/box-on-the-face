{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejasv\\\\Desktop\\\\smart-brain\\\\smartbrain1\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLink from './Components/ImageLink/ImageLink';\nimport DisplayImage from './Components/DisplayImage/DisplayImage';\nimport SignIn from './Components/SignIn/SignIn';\nimport Rank from './Components/Rank/Rank';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Register from './Components/Register/Register';\nimport Faces from './Components/Faces/Faces';\nimport { connect } from 'react-redux';\nimport { setInputField } from './actions';\n\nconst mapStateToProps = state => {\n  return {\n    inputText: state.inputText\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onEnteringUrl: event => dispatch(setInputField(event.target.value))\n  };\n};\n\nconst particleOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 300\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entery: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entery: data.entery,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.boxLoacation = data => {\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return data.outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayBox = boxes => {\n      console.log(\"boxes\", boxes);\n      this.setState({\n        boxes: boxes\n      });\n      console.log(\"box\", this.state.box);\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.props.onEnteringUrl\n      });\n      fetch('http://localhost:3000/images', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // input: this.state.input\n          input: this.props.onEnteringUrl\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/images', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entery: count\n            }));\n          }).catch(console.log);\n        }\n\n        console.log(response);\n        this.displayBox(this.boxLoacation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      } else if (route === 'signout') {\n        this.setState(initialState);\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      imageUrl,\n      boxes\n    } = this.state;\n    const {\n      onEnteringUrl\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: isSignedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entery: this.state.user.entery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ImageLink, {\n      onInputChange: onEnteringUrl,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Faces, {\n      boxes: boxes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(DisplayImage, {\n      imageUrl: imageUrl,\n      boxes: boxes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    })) : this.state.route === 'register' ? /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Tejasv/Desktop/smart-brain/smartbrain1/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLink","DisplayImage","SignIn","Rank","Particles","Register","Faces","connect","setInputField","mapStateToProps","state","inputText","mapDispatchToProps","dispatch","onEnteringUrl","event","target","value","particleOption","particles","number","density","enable","value_area","initialState","input","imageUrl","boxes","route","isSignedIn","user","id","name","email","entery","joined","App","constructor","loadUser","data","setState","password","boxLoacation","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayBox","console","log","box","onButtonSubmit","props","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport Logo from './Components/Logo/Logo';\r\nimport ImageLink from './Components/ImageLink/ImageLink';\r\nimport DisplayImage from './Components/DisplayImage/DisplayImage';\r\nimport SignIn from './Components/SignIn/SignIn';\r\nimport Rank from './Components/Rank/Rank';\r\nimport './App.css'\r\nimport Particles from 'react-particles-js';\r\nimport Register from './Components/Register/Register';\r\nimport Faces from './Components/Faces/Faces';\r\nimport {connect} from 'react-redux';\r\nimport {setInputField} from './actions';\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        inputText:state.inputText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        onEnteringUrl: (event) => dispatch(setInputField(event.target.value))\r\n    }\r\n}\r\n\r\n\r\nconst particleOption = {\r\n    particles: {\r\n        number: {\r\n            value: 30,\r\n            density: {\r\n                enable: true,\r\n                value_area: 300\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    input: '',\r\n    imageUrl: '',\r\n    boxes: [],\r\n    route: 'signin',\r\n    isSignedIn: false,\r\n    user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entery: 0,\r\n        joined: ''\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = initialState;\r\n    }\r\n\r\n  \r\n    loadUser = (data) => {\r\n        this.setState(\r\n            {\r\n                user: {\r\n                    id: data.id,\r\n                    name: data.name,\r\n                    email: data.email,\r\n                    password: data.password,\r\n                    entery: data.entery,\r\n                    joined: data.joined\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    boxLoacation = (data) => {\r\n        \r\n      \r\n       \r\n        const image = document.getElementById(\"inputImage\");\r\n        const width = Number(image.width);\r\n        const height = Number(image.height);\r\n        return  data.outputs[0].data.regions.map(face => {\r\n            const clarifaiFace = face.region_info.bounding_box;\r\n            return {\r\n              leftCol: clarifaiFace.left_col * width,\r\n              topRow: clarifaiFace.top_row * height,\r\n              rightCol: width - (clarifaiFace.right_col * width),\r\n              bottomRow: height - (clarifaiFace.bottom_row * height)\r\n            }\r\n   \r\n    \r\n\r\n    });\r\n}\r\n\r\n   displayBox = (boxes) => {\r\n        console.log( \"boxes\", boxes);\r\n        this.setState({boxes: boxes});\r\n        console.log(\"box\", this.state.box)\r\n    }\r\n    \r\n\r\n\r\n    // onInputChange = (event) => {\r\n    //     this.setState({ input: event.target.value });\r\n    //imageUrl: this.state.input\r\n\r\n    // }\r\n\r\n    onButtonSubmit = () => {\r\n        this.setState({ imageUrl: this.props.onEnteringUrl })\r\n        fetch('http://localhost:3000/images', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                // input: this.state.input\r\n                input : this.props.onEnteringUrl\r\n               \r\n            })\r\n        }) \r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if (response) {\r\n                    fetch('http://localhost:3000/images', {\r\n                        method: 'put',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            id: this.state.user.id\r\n                        })\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(count => {\r\n                            this.setState(Object.assign(this.state.user, { entery: count }))\r\n                        })\r\n                        .catch(console.log);\r\n                }\r\n               \r\n                console.log(response);\r\n               this.displayBox( this.boxLoacation(response));\r\n                   \r\n\r\n            }).catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    onRouteChange = (route) => {\r\n        if (route === 'home') {\r\n            this.setState({ isSignedIn: true })\r\n        } else if (route === 'signout') {\r\n            this.setState(initialState)\r\n        }\r\n        this.setState({ route: route })\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        const { isSignedIn, route, imageUrl, boxes } = this.state;\r\n        const { onEnteringUrl } = this.props;\r\n        return (\r\n            <div>\r\n                <Particles className='particles'\r\n                    params={particleOption}\r\n                />\r\n                <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\r\n\r\n                {route === 'home' ?\r\n                    <div>\r\n                        <Logo />\r\n                        <Rank name={this.state.user.name} entery={this.state.user.entery} />\r\n                        <ImageLink onInputChange={onEnteringUrl}\r\n                            onButtonSubmit={this.onButtonSubmit}\r\n                        />\r\n                        <Faces boxes={boxes}/>\r\n                        <DisplayImage imageUrl={imageUrl} boxes={boxes} />\r\n                        \r\n                            \r\n\r\n                        \r\n                    </div>\r\n                    : (\r\n                        this.state.route === 'register' ?\r\n                            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> :\r\n                            <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}